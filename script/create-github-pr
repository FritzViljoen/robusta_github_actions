#!/usr/bin/env ruby

# requires the github cli https://cli.github.com/manual/
require 'tempfile'

base = ARGV[0] || 'next'
head = ARGV[1] || 'edge'

sha1 = "origin/#{base}"
sha2 = "origin/#{head}"

prev_sha1 = sha1
Tempfile.open('pull-request-message') do |message|
  pull_requests = `git log --oneline #{sha1}..#{sha2} | grep Merge | awk -F' ' '{print $1,$5}'`.split(/\n/)
  migrations = []

  if pull_requests.empty?
    message.write " ### No Pull Requests between #{base} and #{head} ### \n"
  else
    message.write " ### Displaying all Pull Requests between #{base} and #{head} ### \n"
  end

  pull_requests.reverse.each do |pr|
    sha1, num = pr.split(' ')
    next unless num.start_with?('#')

    desc = `git show --format=medium #{sha1}`.scrub.split("\n").last.strip

    matches = desc.match(/(?:RPLUS|FEATURE)[\s-]([^\s\|]+)(?:[\s\|]+)(.+)/i)

    commits = `git diff --name-only #{sha1} #{prev_sha1} | grep migrate`.split(/\n/)
    has_migrations = commits.length.positive?
    migrations << "#{sha1}\t#{num}\t#{commits.length} migration(s)" if has_migrations

    text = "#{sha1}\t#{num}#{has_migrations ? ' *' : '  '}\t"
    if matches
      jira    = "RPLUS-#{matches[1]}"
      desc    = matches[2].strip

      text = if matches[2].to_i.nonzero?
               "#{text} [#{jira}](https://jira.confluence.com/browse/#{jira})"
             else
               "#{text} #{jira}"
             end
    end

    message.write "#{text} _#{desc}_\n"
    prev_sha1 = sha1
  end

  unless migrations.empty?
    message.write " ### Migrations ### \n"
    migrations.each { |m| message.write "#{m}\n" }
  end

  message.rewind
  puts message.readlines
end
